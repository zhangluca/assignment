{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ading\\\\Desktop\\\\netflix-mock\\\\src\\\\App.js\";\nimport React from 'react';\nimport './index.css';\nimport { getMyList, getRecom } from './http/httpInstance';\nimport { connect } from \"react-redux\";\nimport Mod from './pages/mod';\nimport imgURL from './pic/logo.png';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let listData = this.props.listData;\n    let recomData = this.props.recomData;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: imgURL,\n      alt: \"netflixLogo\",\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(Mod, {\n      list: listData,\n      clickEvent: this.props.delListEvent,\n      operate: 'Delete',\n      title: 'My List',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Mod, {\n      list: recomData,\n      clickEvent: this.props.delRecomEvent,\n      operate: 'Add',\n      title: 'Recommendations List',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  }\n\n  async componentDidMount() {\n    let list = await getMyList();\n    let recom = await getRecom();\n    this.props.updateListEvent(list);\n    this.props.updateRecomEvent(recom);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    listData: state.listData,\n    recomData: state.recomData\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateListEvent: data => {\n      dispatch({\n        type: 'updateList',\n        data: data\n      });\n    },\n    updateRecomEvent: data => {\n      dispatch({\n        type: 'updateRecom',\n        data: data\n      });\n    },\n    delListEvent: id => {\n      dispatch({\n        type: 'delList',\n        id: id\n      });\n    },\n    delRecomEvent: id => {\n      dispatch({\n        type: 'delRecom',\n        id: id\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/ading/Desktop/netflix-mock/src/App.js"],"names":["React","getMyList","getRecom","connect","Mod","imgURL","App","Component","constructor","props","state","render","listData","recomData","delListEvent","delRecomEvent","componentDidMount","list","recom","updateListEvent","updateRecomEvent","mapStateToProps","mapDispatchToProps","dispatch","data","type","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,aAAP;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,qBAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAED;;AACDC,EAAAA,MAAM,GAAI;AACR,QAAIC,QAAQ,GAAG,KAAKH,KAAL,CAAWG,QAA1B;AACA,QAAIC,SAAS,GAAG,KAAKJ,KAAL,CAAWI,SAA3B;AACE,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAER,MAAV;AACC,MAAA,GAAG,EAAC,aADL;AACoB,MAAA,SAAS,EAAC,MAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAEO,QAAX;AAAqB,MAAA,UAAU,EAAE,KAAKH,KAAL,CAAWK,YAA5C;AAA0D,MAAA,OAAO,EAAE,QAAnE;AAA6E,MAAA,KAAK,EAAE,SAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAED,SAAX;AAAsB,MAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWM,aAA7C;AAA4D,MAAA,OAAO,EAAE,KAArE;AAA4E,MAAA,KAAK,EAAE,sBAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AASH;;AAGD,QAAMC,iBAAN,GAA2B;AACzB,QAAIC,IAAI,GAAG,MAAMhB,SAAS,EAA1B;AACA,QAAIiB,KAAK,GAAG,MAAMhB,QAAQ,EAA1B;AACA,SAAKO,KAAL,CAAWU,eAAX,CAA2BF,IAA3B;AACA,SAAKR,KAAL,CAAWW,gBAAX,CAA4BF,KAA5B;AACF;;AA1B8B;;AA8BlC,SAASG,eAAT,CAA0BX,KAA1B,EAAiC;AAC/B,SAAO;AACLE,IAAAA,QAAQ,EAAEF,KAAK,CAACE,QADX;AAELC,IAAAA,SAAS,EAAEH,KAAK,CAACG;AAFZ,GAAP;AAID;;AAED,SAASS,kBAAT,CAA6BC,QAA7B,EAAuC;AACrC,SAAO;AACLJ,IAAAA,eAAe,EAAGK,IAAD,IAAU;AACzBD,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAC,YADE;AAEPD,QAAAA,IAAI,EAACA;AAFE,OAAD,CAAR;AAID,KANI;AAQLJ,IAAAA,gBAAgB,EAAEI,IAAD,IAAU;AACzBD,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAC,aADE;AAEPD,QAAAA,IAAI,EAACA;AAFE,OAAD,CAAR;AAID,KAbI;AAcLV,IAAAA,YAAY,EAAGY,EAAD,IAAQ;AACpBH,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,SADC;AAEPC,QAAAA,EAAE,EAACA;AAFI,OAAD,CAAR;AAID,KAnBI;AAqBLX,IAAAA,aAAa,EAAEW,EAAD,IAAQ;AACpBH,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,UADC;AAEPC,QAAAA,EAAE,EAACA;AAFI,OAAD,CAAR;AAID;AA1BI,GAAP;AA4BD;;AAGD,eAAevB,OAAO,CACpBkB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbhB,GAHa,CAAf","sourcesContent":["import React from 'react';\n\nimport './index.css';\nimport {getMyList, getRecom} from './http/httpInstance'\nimport { connect } from \"react-redux\";\nimport Mod from './pages/mod'\nimport imgURL from './pic/logo.png'\n  \nclass App extends React.Component {\n    constructor (props) {\n      super(props)\n      this.state = {\n      }\n    }\n    render () {\n      let listData = this.props.listData\n      let recomData = this.props.recomData\n        return (\n          <div>\n            <img src={imgURL} \n             alt=\"netflixLogo\"  className=\"logo\"></img>\n            <Mod list={listData} clickEvent={this.props.delListEvent} operate={'Delete'} title={'My List'}></Mod>\n            <Mod list={recomData} clickEvent={this.props.delRecomEvent} operate={'Add'} title={'Recommendations List'}></Mod>\n\n          </div>\n        )\n    }\n  \n   \n    async componentDidMount () {\n      let list = await getMyList()\n      let recom = await getRecom()\n      this.props.updateListEvent(list)\n      this.props.updateRecomEvent(recom)\n   }\n   \n}\n\nfunction mapStateToProps (state) {\n  return {\n    listData: state.listData,\n    recomData: state.recomData\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    updateListEvent: (data) => {\n      dispatch({\n        type:'updateList',\n        data:data\n      })\n    },\n    \n    updateRecomEvent:(data) => {\n      dispatch({\n        type:'updateRecom',\n        data:data\n      })\n    },\n    delListEvent: (id) => {\n      dispatch({\n        type: 'delList',\n        id:id\n      })\n    },\n    \n    delRecomEvent:(id) => {\n      dispatch({\n        type: 'delRecom',\n        id:id\n      })\n    }\n  }\n}\n\n\nexport default connect (\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n"]},"metadata":{},"sourceType":"module"}